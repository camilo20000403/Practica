<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAABGdBTUEAALGPC/xhBQAAFlBJREFUeF7t
        3VuwFdWBxvF5nHmZecpDrJrEqqmyaiYpy1SiVZqJ0TAx0YxUpMQazWiixkuIqESMJky8JhoviJdRo4Pi
        DRVvUbxEYxRRS0URUUFEURABBQXlKkRgTb62e7vY9O7ufc46l+/w/1WtUvZe3bt77e6vV3ev3efvAgCY
        ILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADY
        ILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADY
        ILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADY
        ILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADY
        ILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILAA2CCwANggsADYILDM7P6Pf09JWOCF
        wDKjneyNV1+mJCgElh8Cy0wRWOgdAssTgWWGwEqDwPJEYJkhsNIgsDwRWGYIrDQILE8ElhkCKw0CyxOB
        ZYbASoPA8kRgmSGw0iCwPBFYZgisNAgsTwSWGQIrDQLLE4FlhsBKg8DyRGCZIbDSILA8EVhmCKw0CCxP
        BJYZAisNAssTgWWGwEqDwPJEYJkhsNIgsDwRWGYIrDQILE8ElhkCKw0CyxOBZYbASoPA8kRgmSGw0iCw
        PBFYZvoisFatWBHumTQxjDlkRBj25S9mn/Htnb4QRh24f7hpwviw6I35YevWrXntoYHA8kRgmUkZWJs2
        bgx3XHt1K6SqypnHHR2WvbMon9IfgeWJwDKjnSxFYG3+9NNw44SLW4H0432+GR6YfHNY+Pq88PHKlWH5
        0iXhmUcfCeefPDrrbanOwV/fNcx+9pl8Dt4ILE8ElplUgTVn5gth/112zub3+zEnhvVr1+TvbO+1WS+G
        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
        Xs+t0lipok7ZvhBL3Yb6/l9/efY2bVj1SwzVj4NYxTawRCukcVV6wmW8Up2K6i2c/3o+9WdSPglT19LK
        6qjoqKKjS5n4B6AqTb+U+FRApemdPK1z/Hlx0fzKnnelttagQIcnjurnHWXzUOl0VFfPQ3eP47pFj0LX
        8Yqw7kmp+j61vDrQlk2nz7zijHHZo2qa0OBj1W+yrDrden/Ju/mU2+qLNtRNmE7fv4K204E2/tmOinVg
        FXQkWjB3TtaQOnrHX5ieNa4Blq/MeK70iBV3eXtS4h2pal5VgaXl0p294sjT9EtRIBQXxat+cNqup8sp
        Wi7nZ7pXnYbo7qZ+RF9sP8XOpmna59NNqfo+65a32x1U24R6sfpZWrwv6L/6t9ZF+0pV762/27Duu40f
        EDAkAgsAUiCwANggsADYILAA2CCwANggsPpB+10XytAs6HsEVj8o27gpQ6+g7xFYAGwQWABsEFgAbBBY
        AGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBY
        AGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBY
        AGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBY
        AGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBY
        AGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBY
        AGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBYAGwQWABsEFgAbBBY
        AEyE8P/mbi2KFixH4gAAAABJRU5ErkJggg==
</value>
  </data>
</root>